LIBRARY ieee;
USE ieee.std_logic_1164.all;
use ieee.numeric_std.all;
entity top_avalon_tb is
end entity;

architecture x of top_avalon_tb is
component top_avalon is
PORT ( 	clock, resetn 	: IN STD_LOGIC;
			chipselect 		: IN  STD_LOGIC;
			writedata  		: IN  STD_LOGIC_VECTOR(31 DOWNTO 0);
			write_en      	: IN  STD_LOGIC;
			readdata   		: OUT STD_LOGIC_VECTOR(31 DOWNTO 0);
   	   add        		: IN STD_LOGIC_VECTOR (1 DOWNTO 0);
			read_en       	: IN STD_LOGIC );
end component;

signal clk,resetn,write_en, read_en,chipselect: std_logic;
signal address: std_LOGIC_VECTOR (1 downto 0);
signal data: std_LOGIC_VECTOR (31 downto 0);
begin
DUT: top_avalon
port map(
				clock=>clk,
				resetn=>resetn,
				chipselect=>chipselect,
				write_en=>write_en,
				read_en=>read_en,
				add=>address,
				writedata=>data);
clk_gen: Process
begin
		clk<='0';
		wait for 10 ns;
		clk<='1';
end process;
rst_gen: Process
begin
		resetn<='1';
		wait for 15 ns;
		resetn<='0';
end process;

Process
begin
	wait for 20 ns;
	write_en <='1';
	read_en <='1';
	address <='0';
	data <= x"00001111";
	wait for 20 ns;
	address <='1';
	data <= x"00002222";
	wait for 20 ns;
	data <= x"00003333";
	wait for 20 ns;
	address <='0';
	data <= x"00000000";
	wait for 20 ns;
	address <='1';
	data <= x"00000001";
	wait for 20 ns;
	
END x;