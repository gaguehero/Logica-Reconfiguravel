// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "03/28/2021 19:03:36"

// 
// Device: Altera EP2C35F672C6 Package FBGA672
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module totalV (
	CLK,
	RST,
	Qout);
input 	CLK;
input 	RST;
output 	[2:0] Qout;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \CLK~combout ;
wire \totalizador|contador[0]~1_combout ;
wire \RST~combout ;
wire \contador~0_combout ;
wire \totalizador|contador[2]~0_combout ;
wire \Add1~0_combout ;
wire \Add1~1_combout ;
wire [2:0] \totalizador|contador ;


cycloneii_io \CLK~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\CLK~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(CLK));
// synopsys translate_off
defparam \CLK~I .input_async_reset = "none";
defparam \CLK~I .input_power_up = "low";
defparam \CLK~I .input_register_mode = "none";
defparam \CLK~I .input_sync_reset = "none";
defparam \CLK~I .oe_async_reset = "none";
defparam \CLK~I .oe_power_up = "low";
defparam \CLK~I .oe_register_mode = "none";
defparam \CLK~I .oe_sync_reset = "none";
defparam \CLK~I .operation_mode = "input";
defparam \CLK~I .output_async_reset = "none";
defparam \CLK~I .output_power_up = "low";
defparam \CLK~I .output_register_mode = "none";
defparam \CLK~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \totalizador|contador[0]~1 (
// Equation(s):
// \totalizador|contador[0]~1_combout  = !\totalizador|contador [0]

	.dataa(\totalizador|contador [0]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.cin(gnd),
	.combout(\totalizador|contador[0]~1_combout ),
	.cout());
// synopsys translate_off
defparam \totalizador|contador[0]~1 .lut_mask = 16'h5555;
defparam \totalizador|contador[0]~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \RST~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\RST~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(RST));
// synopsys translate_off
defparam \RST~I .input_async_reset = "none";
defparam \RST~I .input_power_up = "low";
defparam \RST~I .input_register_mode = "none";
defparam \RST~I .input_sync_reset = "none";
defparam \RST~I .oe_async_reset = "none";
defparam \RST~I .oe_power_up = "low";
defparam \RST~I .oe_register_mode = "none";
defparam \RST~I .oe_sync_reset = "none";
defparam \RST~I .operation_mode = "input";
defparam \RST~I .output_async_reset = "none";
defparam \RST~I .output_power_up = "low";
defparam \RST~I .output_register_mode = "none";
defparam \RST~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_ff \totalizador|contador[0] (
	.clk(\CLK~combout ),
	.datain(\totalizador|contador[0]~1_combout ),
	.sdata(gnd),
	.aclr(\RST~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\totalizador|contador [0]));

cycloneii_lcell_comb \contador~0 (
// Equation(s):
// \contador~0_combout  = \totalizador|contador [1] $ (\totalizador|contador [0])

	.dataa(vcc),
	.datab(vcc),
	.datac(\totalizador|contador [1]),
	.datad(\totalizador|contador [0]),
	.cin(gnd),
	.combout(\contador~0_combout ),
	.cout());
// synopsys translate_off
defparam \contador~0 .lut_mask = 16'h0FF0;
defparam \contador~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \totalizador|contador[1] (
	.clk(\CLK~combout ),
	.datain(\contador~0_combout ),
	.sdata(gnd),
	.aclr(\RST~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\totalizador|contador [1]));

cycloneii_lcell_comb \totalizador|contador[2]~0 (
// Equation(s):
// \totalizador|contador[2]~0_combout  = \totalizador|contador [2] $ (((\totalizador|contador [1] & \totalizador|contador [0])))

	.dataa(vcc),
	.datab(\totalizador|contador [2]),
	.datac(\totalizador|contador [1]),
	.datad(\totalizador|contador [0]),
	.cin(gnd),
	.combout(\totalizador|contador[2]~0_combout ),
	.cout());
// synopsys translate_off
defparam \totalizador|contador[2]~0 .lut_mask = 16'h3CCC;
defparam \totalizador|contador[2]~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \totalizador|contador[2] (
	.clk(\CLK~combout ),
	.datain(\totalizador|contador[2]~0_combout ),
	.sdata(gnd),
	.aclr(\RST~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\totalizador|contador [2]));

cycloneii_lcell_comb \Add1~0 (
// Equation(s):
// \Add1~0_combout  = \totalizador|contador [2] $ (\totalizador|contador [1] $ (\totalizador|contador [0]))

	.dataa(\totalizador|contador [2]),
	.datab(\totalizador|contador [1]),
	.datac(\totalizador|contador [0]),
	.datad(vcc),
	.cin(gnd),
	.combout(\Add1~0_combout ),
	.cout());
// synopsys translate_off
defparam \Add1~0 .lut_mask = 16'h9696;
defparam \Add1~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Add1~1 (
// Equation(s):
// \Add1~1_combout  = (\totalizador|contador [2] & ((\totalizador|contador [1]) # (\totalizador|contador [0]))) # (!\totalizador|contador [2] & (\totalizador|contador [1] & \totalizador|contador [0]))

	.dataa(\totalizador|contador [2]),
	.datab(\totalizador|contador [1]),
	.datac(\totalizador|contador [0]),
	.datad(vcc),
	.cin(gnd),
	.combout(\Add1~1_combout ),
	.cout());
// synopsys translate_off
defparam \Add1~1 .lut_mask = 16'hE8E8;
defparam \Add1~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \Qout[0]~I (
	.datain(\Add1~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Qout[0]));
// synopsys translate_off
defparam \Qout[0]~I .input_async_reset = "none";
defparam \Qout[0]~I .input_power_up = "low";
defparam \Qout[0]~I .input_register_mode = "none";
defparam \Qout[0]~I .input_sync_reset = "none";
defparam \Qout[0]~I .oe_async_reset = "none";
defparam \Qout[0]~I .oe_power_up = "low";
defparam \Qout[0]~I .oe_register_mode = "none";
defparam \Qout[0]~I .oe_sync_reset = "none";
defparam \Qout[0]~I .operation_mode = "output";
defparam \Qout[0]~I .output_async_reset = "none";
defparam \Qout[0]~I .output_power_up = "low";
defparam \Qout[0]~I .output_register_mode = "none";
defparam \Qout[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Qout[1]~I (
	.datain(\Add1~1_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Qout[1]));
// synopsys translate_off
defparam \Qout[1]~I .input_async_reset = "none";
defparam \Qout[1]~I .input_power_up = "low";
defparam \Qout[1]~I .input_register_mode = "none";
defparam \Qout[1]~I .input_sync_reset = "none";
defparam \Qout[1]~I .oe_async_reset = "none";
defparam \Qout[1]~I .oe_power_up = "low";
defparam \Qout[1]~I .oe_register_mode = "none";
defparam \Qout[1]~I .oe_sync_reset = "none";
defparam \Qout[1]~I .operation_mode = "output";
defparam \Qout[1]~I .output_async_reset = "none";
defparam \Qout[1]~I .output_power_up = "low";
defparam \Qout[1]~I .output_register_mode = "none";
defparam \Qout[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Qout[2]~I (
	.datain(gnd),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Qout[2]));
// synopsys translate_off
defparam \Qout[2]~I .input_async_reset = "none";
defparam \Qout[2]~I .input_power_up = "low";
defparam \Qout[2]~I .input_register_mode = "none";
defparam \Qout[2]~I .input_sync_reset = "none";
defparam \Qout[2]~I .oe_async_reset = "none";
defparam \Qout[2]~I .oe_power_up = "low";
defparam \Qout[2]~I .oe_register_mode = "none";
defparam \Qout[2]~I .oe_sync_reset = "none";
defparam \Qout[2]~I .operation_mode = "output";
defparam \Qout[2]~I .output_async_reset = "none";
defparam \Qout[2]~I .output_power_up = "low";
defparam \Qout[2]~I .output_register_mode = "none";
defparam \Qout[2]~I .output_sync_reset = "none";
// synopsys translate_on

endmodule
